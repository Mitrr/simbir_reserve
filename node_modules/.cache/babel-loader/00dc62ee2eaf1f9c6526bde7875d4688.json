{"remainingRequest":"D:\\WORK\\simbir\\service-app\\node_modules\\babel-loader\\lib\\index.js!D:\\WORK\\simbir\\service-app\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\WORK\\simbir\\service-app\\src\\router.js","dependencies":[{"path":"D:\\WORK\\simbir\\service-app\\src\\router.js","mtime":1553446337956},{"path":"D:\\WORK\\simbir\\service-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WORK\\simbir\\service-app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\WORK\\simbir\\service-app\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from './views/Home.vue';\nimport News from './components/News';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\nimport NewsDetails from \"./components/NewsDetails\";\nimport Store from './store.js';\nVue.use(Router);\nexport default new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'home',\n    component: Home\n  }, {\n    path: '/news',\n    name: 'news',\n    component: News,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/login',\n    name: 'login',\n    component: Login\n  }, {\n    path: '/logout',\n    name: 'logout',\n    component: Logout\n  }, {\n    path: '/news/:id',\n    props: true,\n    name: 'tododetails',\n    component: NewsDetails\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    if (!Store.getters.getIsAuthed) {\n      next({\n        name: 'news'\n      });\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\n/*function AuthGuard(from,to,next) {\n    if (Store.getters.getIsAuthed) {\n        next()\n    }else next('/login')\n}*/",{"version":3,"sources":["D:\\WORK\\simbir\\service-app\\src\\router.js"],"names":["Vue","Router","Home","News","Login","Logout","NewsDetails","Store","use","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","props","router","beforeEach","to","from","next","matched","some","record","getters","getIsAuthed"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEAP,GAAG,CAACQ,GAAJ,CAAQP,MAAR;AAEA,eAAe,IAAIA,MAAJ,CAAW;AACxBQ,EAAAA,IAAI,EAAE,SADkB;AAExBC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAFM;AAGxBC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGIC,IAAAA,SAAS,EAACf;AAHd,GADM,EAMJ;AACIa,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,SAAS,EAAEd,IAHf;AAIIe,IAAAA,IAAI,EAAC;AAACC,MAAAA,YAAY,EAAC;AAAd;AAJT,GANI,EAYJ;AACIJ,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,SAAS,EAAEb;AAHf,GAZI,EAiBJ;AACIW,IAAAA,IAAI,EAAE,SADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,SAAS,EAAEZ;AAHf,GAjBI,EAsBJ;AACIU,IAAAA,IAAI,EAAE,WADV;AAEIK,IAAAA,KAAK,EAAE,IAFX;AAGIJ,IAAAA,IAAI,EAAC,aAHT;AAIIC,IAAAA,SAAS,EAAEX;AAJf,GAtBI;AAHgB,CAAX,CAAf;AAkCAe,MAAM,CAACC,UAAP,CAAkB,UAACC,EAAD,EAAIC,IAAJ,EAASC,IAAT,EAAkB;AAChC,MAAIF,EAAE,CAACG,OAAH,CAAWC,IAAX,CAAgB,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACV,IAAP,CAAYC,YAAhB;AAAA,GAAtB,CAAJ,EAAyD;AACrD,QAAI,CAACZ,KAAK,CAACsB,OAAN,CAAcC,WAAnB,EAAgC;AAC5BL,MAAAA,IAAI,CAAC;AAAET,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAJ;AACH,KAFD,MAEO;AACHS,MAAAA,IAAI;AACP;AACJ,GAND,MAMO;AACHA,IAAAA,IAAI;AACP;AACJ,CAVD;AAYA","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport Home from './views/Home.vue'\n\nimport News from './components/News'\nimport Login from './components/Login'\nimport Logout from './components/Logout'\nimport NewsDetails from \"./components/NewsDetails\";\nimport Store from './store.js'\n\nVue.use(Router);\n\nexport default new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/',\n      name: 'home',\n        component:Home\n    },\n      {\n          path: '/news',\n          name: 'news',\n          component: News,\n          meta:{requiresAuth:true}\n      },\n      {\n          path: '/login',\n          name: 'login',\n          component: Login\n      },\n      {\n          path: '/logout',\n          name: 'logout',\n          component: Logout\n      },\n      {\n          path: '/news/:id',\n          props: true,\n          name:'tododetails',\n          component: NewsDetails\n      }\n  ]\n})\n\nrouter.beforeEach((to,from,next) => {\n    if (to.matched.some(record => record.meta.requiresAuth)) {\n        if (!Store.getters.getIsAuthed) {\n            next({ name: 'news' })\n        } else {\n            next()\n        }\n    } else {\n        next()\n    }\n});\n\n/*function AuthGuard(from,to,next) {\n    if (Store.getters.getIsAuthed) {\n        next()\n    }else next('/login')\n}*/\n"]}]}