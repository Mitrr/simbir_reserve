{"remainingRequest":"D:\\WORK\\simbir_reserve\\service-app\\node_modules\\babel-loader\\lib\\index.js!D:\\WORK\\simbir_reserve\\service-app\\node_modules\\vuetify-loader\\lib\\loader.js!D:\\WORK\\simbir_reserve\\service-app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WORK\\simbir_reserve\\service-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WORK\\simbir_reserve\\service-app\\src\\components\\NewsList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WORK\\simbir_reserve\\service-app\\src\\components\\NewsList.vue","mtime":1553506198661},{"path":"D:\\WORK\\simbir_reserve\\service-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WORK\\simbir_reserve\\service-app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\WORK\\simbir_reserve\\service-app\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"D:\\WORK\\simbir_reserve\\service-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WORK\\simbir_reserve\\service-app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ScrumBoard from '@/components/ScrumBoard';\nimport { debounce } from 'lodash';\nexport default {\n  name: \"NewsList\",\n  components: {\n    ScrumBoard: ScrumBoard\n  },\n  data: function data() {\n    return {\n      search: null,\n      interval: null,\n      view: 'Краткий',\n      value: [],\n      sorting: null,\n      categories: ['Поступил', 'В работе', 'Выполнен'],\n      views: ['Краткий', 'Подробный', 'Scrum'],\n      sorts: ['По возрастанию приоритета', 'По уменьшению приоритета', 'Без сортировки'],\n      headers: [{\n        text: 'Название',\n        sortable: false\n      },\n      /*{text:'Описание'},*/\n      {\n        text: 'Приоритет',\n        value: 'priority'\n      }, {\n        text: 'Планируемое время',\n        sortable: false\n      }, {\n        text: 'Затраченное время',\n        sortable: false\n      }, {\n        text: 'Статус',\n        sortable: false\n      }]\n    };\n  },\n  computed: {\n    newslist: function newslist() {\n      return this.$store.getters.getNews;\n    },\n    filteredNews: function filteredNews() {\n      var _this = this;\n\n      var newslist = this.newslist;\n\n      if (this.search) {\n        newslist = newslist.filter(function (n) {\n          return n.title.toLowerCase().indexOf(_this.search.toLowerCase()) >= 0;\n        });\n      }\n\n      if (this.value.length) {\n        newslist = newslist.filter(function (n) {\n          return _this.value.filter(function (v) {\n            return n.status.indexOf(v) !== -1;\n          }).length > 0;\n        });\n      }\n\n      if (this.sorting === 'По возрастанию приоритета') {\n        newslist.sort(function (a, b) {\n          if (a.priority > b.priority) return 1;\n          if (a.priority < b.priority) return -1;\n        });\n      }\n\n      if (this.sorting === 'По уменьшению приоритета') {\n        newslist.sort(function (a, b) {\n          if (a.priority > b.priority) return -1;\n          if (a.priority < b.priority) return 1;\n        });\n      }\n\n      return newslist;\n    }\n  },\n  methods: {\n    stopRefresh: function stopRefresh() {\n      if (this.interval) {\n        window.clearInterval(this.interval);\n      }\n    },\n    startRefresh: function startRefresh() {\n      var _this2 = this;\n\n      this.stopRefresh();\n      this.interval = window.setInterval(function () {\n        _this2.$store.dispatch('LOAD_NEWS');\n      }, 500);\n    },\n    openDetails: function openDetails(id) {\n      this.$router.push({\n        name: 'tododetails',\n        params: {\n          id: id\n        }\n      });\n    },\n    updateBlock: debounce(function (id, status) {\n      var payload = {\n        id: id,\n        status: status\n      };\n      this.$store.dispatch('SET_STATUS', payload);\n    }, 500)\n  },\n  watch: {\n    sorting: function sorting(newVal, oldVal) {\n      if (newVal === 'Без сортировки') {\n        this.sorting = null;\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.startRefresh();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.stopRefresh();\n  }\n};",{"version":3,"sources":["NewsList.vue"],"names":[],"mappings":"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","sourcesContent":["<template xmlns:v-slot=\"http://www.w3.org/1999/XSL/Transform\">\r\n    <v-container grid-list-lg>\r\n        <v-layout wrap row>\r\n            <v-flex xs12 sm12 md8 offset-md2>\r\n                <v-container fluid>\r\n                    <v-layout row>\r\n                        <v-flex v-if=\"view!=='Scrum'\">\r\n                            <v-text-field label=\"Поиск по заголовку\" v-model=\"search\"></v-text-field>\r\n                        </v-flex>\r\n                        <v-flex v-if=\"view!=='Scrum'\">\r\n                            <v-select label=\"Статусы\"  v-model=\"value\" :items=\"categories\" attach chips multiple></v-select>\r\n                        </v-flex>\r\n                    </v-layout>\r\n                    <v-layout row>\r\n                        <v-flex>\r\n                            <v-select label=\"ВИД\"  v-model=\"view\" :items=\"views\" attach chips></v-select>\r\n                        </v-flex>\r\n                        <v-flex v-if=\"view==='Подробный'\">\r\n                            <v-select label=\"СОРТИРОВКА\"  v-model=\"sorting\" :items=\"sorts\" attach chips></v-select>\r\n                        </v-flex>\r\n                    </v-layout>\r\n                </v-container>\r\n            </v-flex>\r\n\r\n            <v-flex xs12 sm12 md10 offset-md1>\r\n                <div v-if=\"view==='Подробный'\">\r\n                    <v-card v-for=\"news in filteredNews\" :key=\"news.id\" class=\"mb-4\">\r\n                        <v-container fill-height fluid>\r\n                            <v-layout fill-height>\r\n                                <v-flex xs12 align-end flexbox dark>\r\n                                    <span class=\"headline\">{{news.title}}</span>\r\n                                </v-flex>\r\n                            </v-layout>\r\n                        </v-container>\r\n                        <v-card-title>\r\n                            <div>\r\n                                <span><b>Приоритет:</b> {{news.priority}}</span><br>\r\n                            </div>\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                            <p><b>Описание:</b> {{news.description}}</p>\r\n                            <p><b>Планируемое время:</b> {{news.planTime}}</p>\r\n                            <p><b>Затраченное время:</b> {{news.inWorkTime}}</p>\r\n                            <p><b>Статус:</b> {{news.status}}</p>\r\n                        </v-card-text>\r\n                        <v-divider light></v-divider>\r\n                        <v-card-actions>\r\n                            <v-btn flat color=\"orange\" :to=\"'/news/'+news.id\">Открыть</v-btn>\r\n                        </v-card-actions>\r\n                    </v-card>\r\n                </div>\r\n\r\n                <v-data-table v-if=\"view==='Краткий'\"\r\n                        :headers=\"headers\"\r\n                        :items=\"filteredNews\"\r\n                        class=\"elevation-1\"\r\n                >\r\n                    <template v-slot:items=\"props\">\r\n                        <td @click=\"openDetails(props.item.id)\"><span class=\"table-link\">{{ props.item.title }}</span></td>\r\n                        <!--<td class=\"text-xs-right\">{{ props.item.description }}</td>-->\r\n                        <td class=\"text-xs-right\">{{ props.item.priority }}</td>\r\n                        <td class=\"text-xs-right\">{{ props.item.planTime }}</td>\r\n                        <td class=\"text-xs-right\">{{ props.item.inWorkTime }}</td>\r\n                        <td class=\"text-xs-right\">{{ props.item.status }}</td>\r\n                    </template>\r\n                </v-data-table>\r\n            </v-flex>\r\n\r\n            <v-flex v-if=\"view==='Scrum'\" xs12 sm12 md10 offset-md1>\r\n                <ScrumBoard :stages=\"categories\" :blocks=\"newslist\" @update-block=\"updateBlock\">\r\n                    <div v-for=\"stage in categories\" :slot=\"stage\" :key=\"stage\">\r\n                        <h2>\r\n                            {{ stage }}\r\n                        </h2>\r\n                    </div>\r\n                    <div v-for=\"item in newslist\" :slot=\"item.id\" :key=\"item.id\">\r\n                        <div class=\"item_header\">\r\n                            <strong>{{ item.title }}</strong>\r\n                        </div>\r\n                        <div class=\"item_descriprion\">\r\n                            Описание: {{item.description}}\r\n                        </div>\r\n                        <div>\r\n                            Приоритет: {{item.priority}}\r\n                        </div>\r\n                        <div>\r\n                            <v-btn :to=\"'/news/'+item.id\">Подробнее</v-btn>\r\n                        </div>\r\n                    </div>\r\n                </ScrumBoard>\r\n            </v-flex>\r\n        </v-layout>\r\n    </v-container>\r\n\r\n</template>\r\n\r\n<script>\r\n    import ScrumBoard from '@/components/ScrumBoard';\r\n    import { debounce } from 'lodash';\r\n\r\n    export default {\r\n        name: \"NewsList\",\r\n        components:{\r\n          ScrumBoard\r\n        },\r\n        data(){\r\n            return{\r\n                search:null,\r\n                interval:null,\r\n                view:'Краткий',\r\n                value:[],\r\n                sorting:null,\r\n                categories:['Поступил','В работе','Выполнен'],\r\n                views:['Краткий','Подробный','Scrum'],\r\n                sorts:['По возрастанию приоритета','По уменьшению приоритета','Без сортировки'],\r\n                headers:[\r\n                    {text:'Название',sortable: false},\r\n                    /*{text:'Описание'},*/\r\n                    {text:'Приоритет',value:'priority'},\r\n                    {text:'Планируемое время',sortable: false},\r\n                    {text:'Затраченное время',sortable: false},\r\n                    {text:'Статус',sortable: false},\r\n                ]\r\n            }\r\n        },\r\n        computed:{\r\n            newslist(){\r\n                return this.$store.getters.getNews;\r\n            },\r\n            filteredNews(){\r\n                var newslist = this.newslist;\r\n\r\n                if (this.search){\r\n                    newslist = newslist.filter(n => n.title.toLowerCase().indexOf(this.search.toLowerCase()) >=0);\r\n                }\r\n\r\n                if (this.value.length){\r\n                    newslist = newslist.filter(n => this.value.filter(v => n.status.indexOf(v)!== -1).length > 0);\r\n                }\r\n\r\n                if (this.sorting === 'По возрастанию приоритета'){\r\n                    newslist.sort((a,b) => {\r\n                        if (a.priority > b.priority) return 1;\r\n                        if (a.priority < b.priority) return -1;\r\n                    });\r\n                }\r\n                if (this.sorting === 'По уменьшению приоритета') {\r\n                    newslist.sort((a,b) => {\r\n                        if (a.priority > b.priority) return -1;\r\n                        if (a.priority < b.priority) return 1;\r\n                    });\r\n                }\r\n                return newslist;\r\n            }\r\n        },\r\n        methods:{\r\n            stopRefresh:function () {\r\n                if (this.interval){\r\n                    window.clearInterval(this.interval);\r\n                }\r\n            },\r\n\r\n            startRefresh:function () {\r\n                this.stopRefresh();\r\n                this.interval = window.setInterval(() => {\r\n                    this.$store.dispatch('LOAD_NEWS');\r\n                }, 500)\r\n\r\n            },\r\n\r\n            openDetails: function(id){\r\n                this.$router.push({name:'tododetails',params:{id:id}});\r\n            },\r\n\r\n            updateBlock: debounce(function (id, status) {\r\n                let payload = {\r\n                    id:id,\r\n                    status:status\r\n                };\r\n                this.$store.dispatch('SET_STATUS',payload);\r\n            }, 500),\r\n        },\r\n        watch:{\r\n            sorting:function (newVal,oldVal) {\r\n                if (newVal === 'Без сортировки'){\r\n                    this.sorting = null;\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            this.startRefresh();\r\n\r\n        },\r\n        beforeDestroy() {\r\n            this.stopRefresh();\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    .item_header{\r\n        padding-left: 10px;\r\n        font-size: 25px;\r\n    }\r\n    .item_descriprion{\r\n        font-size: 18px;\r\n        padding-left: 5px;\r\n        padding-bottom: 10px;\r\n    }\r\n    .table-link{\r\n        cursor: pointer;\r\n        color: #101087;\r\n    }\r\n    @import '../assets/scrum_board';\r\n    $on-hold: #FB7D44;\r\n    $in-progress: #2A92BF;\r\n    $approved: #00B961;\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .drag-column {\r\n    .drag-column-header > div {\r\n        width: 100%;\r\n    h2 > a {\r\n        float: right;\r\n    }\r\n    }\r\n    .drag-column-footer > div {\r\n        margin-left: 10px;\r\n    a {\r\n        text-decoration: none;\r\n        color: white;\r\n    &:hover {\r\n         text-decoration: underline;\r\n     }\r\n    }\r\n    }\r\n    &-Поступил {\r\n    .drag-column-header,\r\n    .is-moved,\r\n    .drag-options {\r\n        background: $on-hold;\r\n    }\r\n    }\r\n    &-in-progress {\r\n    .drag-column-header,\r\n    .is-moved,\r\n    .drag-options {\r\n        background: $in-progress;\r\n    }\r\n    }\r\n    &-Выполнен {\r\n    .drag-column-header,\r\n    .is-moved,\r\n    .drag-options {\r\n        background: $approved;\r\n    }\r\n    }\r\n    }\r\n    .section {\r\n        padding: 20px;\r\n        text-align: center;\r\n    a {\r\n        color: white;\r\n        text-decoration: none;\r\n        font-weight: 300;\r\n    }\r\n    h4 {\r\n        font-weight: 400;\r\n    a {\r\n        font-weight: 600;\r\n    }\r\n    }\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}