{"remainingRequest":"D:\\WORK\\simbir_reserve\\service-app\\node_modules\\babel-loader\\lib\\index.js!D:\\WORK\\simbir_reserve\\service-app\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\WORK\\simbir_reserve\\service-app\\src\\store\\news.js","dependencies":[{"path":"D:\\WORK\\simbir_reserve\\service-app\\src\\store\\news.js","mtime":1553505073959},{"path":"D:\\WORK\\simbir_reserve\\service-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WORK\\simbir_reserve\\service-app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\WORK\\simbir_reserve\\service-app\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nexport default {\n  state: {\n    news: []\n  },\n  mutations: {\n    SET_NEWS: function SET_NEWS(state, payload) {\n      state.news = payload;\n    },\n    ADD_TODO: function ADD_TODO(state, payload) {\n      state.news.push(payload);\n    }\n  },\n  actions: {\n    LOAD_NEWS: function LOAD_NEWS(_ref) {\n      var commit = _ref.commit;\n      Vue.$db.collection('todos').get().then(function (querySnapshot) {\n        var news = [];\n        querySnapshot.forEach(function (s) {\n          var data = s.data();\n          var oneNews = {\n            id: s.id,\n            title: data.title,\n            description: data.description,\n            priority: data.priority,\n            planTime: data.planTime,\n            inWorkTime: data.inWorkTime,\n            status: data.status\n          };\n          news.push(oneNews);\n        });\n        commit('SET_NEWS', news);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    ADD_TODO: function ADD_TODO(_ref2, payload) {\n      var commit = _ref2.commit;\n      Vue.$db.collection('todos').add(payload);\n    },\n    EDIT_TODO: function EDIT_TODO(_ref3, payload) {\n      var commit = _ref3.commit;\n      Vue.$db.collection('todos').doc(payload.id).set({\n        planTime: payload.planTime,\n        inWorkTime: payload.inWorkTime,\n        status: payload.status\n      }, {\n        merge: true\n      });\n      this.$store.dispatch('LOAD_NEWS');\n    },\n    SET_STATUS: function SET_STATUS(_ref4, payload) {\n      var commit = _ref4.commit;\n      Vue.$db.collection('todos').doc(payload.id).set({\n        status: payload.status\n      }, {\n        merge: true\n      });\n    }\n  },\n  getters: {\n    getNews: function getNews(state) {\n      return state.news;\n    }\n  }\n};",{"version":3,"sources":["D:\\WORK\\simbir_reserve\\service-app\\src\\store\\news.js"],"names":["Vue","state","news","mutations","SET_NEWS","payload","ADD_TODO","push","actions","LOAD_NEWS","commit","$db","collection","get","then","querySnapshot","forEach","s","data","oneNews","id","title","description","priority","planTime","inWorkTime","status","catch","err","console","log","add","EDIT_TODO","doc","set","merge","$store","dispatch","SET_STATUS","getters","getNews"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\n\r\nexport default {\r\n    state: {\r\n        news:[]\r\n    },\r\n    mutations: {\r\n        SET_NEWS(state, payload){\r\n            state.news = payload;\r\n        },\r\n        ADD_TODO(state,payload){\r\n            state.news.push(payload);\r\n        }\r\n    },\r\n    actions:{\r\n      LOAD_NEWS({commit}){\r\n          Vue.$db.collection('todos').get()\r\n              .then(querySnapshot => {\r\n                  let news = [];\r\n                  querySnapshot.forEach(s => {\r\n                      const data = s.data();\r\n                      let oneNews = {\r\n                          id:s.id,\r\n                          title:data.title,\r\n                          description:data.description,\r\n                          priority:data.priority,\r\n                          planTime:data.planTime,\r\n                          inWorkTime:data.inWorkTime,\r\n                          status:data.status\r\n                      };\r\n                      news.push(oneNews);\r\n                  });\r\n                  commit('SET_NEWS', news);\r\n              })\r\n              .catch(err => console.log(err))\r\n      },\r\n        ADD_TODO({commit},payload){\r\n          Vue.$db.collection('todos').add(payload);\r\n        },\r\n        EDIT_TODO({commit},payload){\r\n          Vue.$db.collection('todos').doc(payload.id).set({\r\n              planTime:payload.planTime,\r\n              inWorkTime:payload.inWorkTime,\r\n              status:payload.status\r\n          },{ merge: true });\r\n            this.$store.dispatch('LOAD_NEWS');\r\n        },\r\n        SET_STATUS({commit},payload){\r\n          Vue.$db.collection('todos').doc(payload.id).set({\r\n              status:payload.status\r\n          },{merge:true});\r\n        }\r\n    },\r\n    getters: {\r\n        getNews:(state) => state.news\r\n    }\r\n}\r\n"]}]}