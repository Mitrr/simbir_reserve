{"remainingRequest":"D:\\WORK\\simbir_reserve\\service-app\\node_modules\\babel-loader\\lib\\index.js!D:\\WORK\\simbir_reserve\\service-app\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\WORK\\simbir_reserve\\service-app\\src\\store\\user.js","dependencies":[{"path":"D:\\WORK\\simbir_reserve\\service-app\\src\\store\\user.js","mtime":1553269807443},{"path":"D:\\WORK\\simbir_reserve\\service-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WORK\\simbir_reserve\\service-app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\WORK\\simbir_reserve\\service-app\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import firebase from 'firebase';\nexport default {\n  state: {\n    user: {\n      isAuth: false,\n      userId: null\n    }\n  },\n  mutations: {\n    setUser: function setUser(state, payload) {\n      state.user.isAuth = true;\n      state.user.userId = payload;\n    },\n    unsetUser: function unsetUser(state) {\n      state.user = {\n        isAuth: false,\n        userId: null\n      };\n    }\n  },\n  actions: {\n    SIGNIN: function SIGNIN(_ref, payload) {\n      var commit = _ref.commit;\n      commit('SET_PROCESSING', true);\n      commit('CLEAR_ERROR');\n      firebase.auth().signInWithEmailAndPassword(payload.email, payload.password).then(function () {\n        commit('SET_PROCESSING', false);\n        /*commit('setUser',user.uid);*/\n      }).catch(function (error) {\n        commit('SET_PROCESSING', false);\n        var errMsg = error.message;\n\n        if (errMsg === 'The email address is badly formatted.') {\n          commit('SET_ERROR', 'Не верный формат email');\n        } else commit('SET_ERROR', errMsg);\n      });\n    },\n    STATE_CHANGED: function STATE_CHANGED(_ref2, payload) {\n      var commit = _ref2.commit;\n\n      if (payload) {\n        commit('setUser', payload.uid);\n      } else {\n        commit('unsetUser');\n      }\n    },\n    LOGOUT: function LOGOUT() {\n      firebase.auth().signOut();\n    }\n  },\n  getters: {\n    getIsAuthed: function getIsAuthed(state) {\n      return state.user.isAuth;\n    },\n    getUserID: function getUserID(state) {\n      return state.user.userId;\n    }\n  }\n};",{"version":3,"sources":["D:\\WORK\\simbir_reserve\\service-app\\src\\store\\user.js"],"names":["firebase","state","user","isAuth","userId","mutations","setUser","payload","unsetUser","actions","SIGNIN","commit","auth","signInWithEmailAndPassword","email","password","then","catch","error","errMsg","message","STATE_CHANGED","uid","LOGOUT","signOut","getters","getIsAuthed","getUserID"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,eAAe;AACXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAC,KADL;AAEFC,MAAAA,MAAM,EAAC;AAFL;AADH,GADI;AAOXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,OADO,mBACCL,KADD,EACQM,OADR,EACgB;AACnBN,MAAAA,KAAK,CAACC,IAAN,CAAWC,MAAX,GAAoB,IAApB;AACAF,MAAAA,KAAK,CAACC,IAAN,CAAWE,MAAX,GAAoBG,OAApB;AACH,KAJM;AAKPC,IAAAA,SALO,qBAKGP,KALH,EAKS;AACZA,MAAAA,KAAK,CAACC,IAAN,GAAa;AACTC,QAAAA,MAAM,EAAC,KADE;AAETC,QAAAA,MAAM,EAAE;AAFC,OAAb;AAIH;AAVM,GAPA;AAmBXK,EAAAA,OAAO,EAAE;AACLC,IAAAA,MADK,wBACWH,OADX,EACmB;AAAA,UAAhBI,MAAgB,QAAhBA,MAAgB;AACpBA,MAAAA,MAAM,CAAC,gBAAD,EAAkB,IAAlB,CAAN;AACAA,MAAAA,MAAM,CAAC,aAAD,CAAN;AACAX,MAAAA,QAAQ,CAACY,IAAT,GAAgBC,0BAAhB,CAA2CN,OAAO,CAACO,KAAnD,EAA0DP,OAAO,CAACQ,QAAlE,EACKC,IADL,CACU,YAAM;AACRL,QAAAA,MAAM,CAAC,gBAAD,EAAkB,KAAlB,CAAN;AACA;AACH,OAJL,EAKKM,KALL,CAKW,UAASC,KAAT,EAAgB;AACnBP,QAAAA,MAAM,CAAC,gBAAD,EAAkB,KAAlB,CAAN;AACA,YAAIQ,MAAM,GAAGD,KAAK,CAACE,OAAnB;;AACA,YAAID,MAAM,KAAK,uCAAf,EAAwD;AACpDR,UAAAA,MAAM,CAAC,WAAD,EAAc,wBAAd,CAAN;AACH,SAFD,MAEMA,MAAM,CAAC,WAAD,EAAaQ,MAAb,CAAN;AACb,OAXD;AAYH,KAhBI;AAiBLE,IAAAA,aAjBK,gCAiBkBd,OAjBlB,EAiB0B;AAAA,UAAhBI,MAAgB,SAAhBA,MAAgB;;AAC3B,UAAIJ,OAAJ,EAAY;AACRI,QAAAA,MAAM,CAAC,SAAD,EAAYJ,OAAO,CAACe,GAApB,CAAN;AACH,OAFD,MAEM;AACFX,QAAAA,MAAM,CAAC,WAAD,CAAN;AACH;AACJ,KAvBI;AAwBLY,IAAAA,MAxBK,oBAwBG;AACJvB,MAAAA,QAAQ,CAACY,IAAT,GAAgBY,OAAhB;AACH;AA1BI,GAnBE;AA+CXC,EAAAA,OAAO,EAAC;AACJC,IAAAA,WAAW,EAAE,qBAACzB,KAAD;AAAA,aAAWA,KAAK,CAACC,IAAN,CAAWC,MAAtB;AAAA,KADT;AAEJwB,IAAAA,SAAS,EAAE,mBAAC1B,KAAD;AAAA,aAAWA,KAAK,CAACC,IAAN,CAAWE,MAAtB;AAAA;AAFP;AA/CG,CAAf","sourcesContent":["import firebase from 'firebase'\r\n\r\nexport default {\r\n    state: {\r\n        user: {\r\n            isAuth:false,\r\n            userId:null\r\n        }\r\n    },\r\n    mutations: {\r\n        setUser(state, payload){\r\n            state.user.isAuth = true;\r\n            state.user.userId = payload;\r\n        },\r\n        unsetUser(state){\r\n            state.user = {\r\n                isAuth:false,\r\n                userId: null\r\n            }\r\n        }\r\n    },\r\n    actions: {\r\n        SIGNIN({commit},payload){\r\n            commit('SET_PROCESSING',true);\r\n            commit('CLEAR_ERROR');\r\n            firebase.auth().signInWithEmailAndPassword(payload.email, payload.password)\r\n                .then(() => {\r\n                    commit('SET_PROCESSING',false);\r\n                    /*commit('setUser',user.uid);*/\r\n                })\r\n                .catch(function(error) {\r\n                    commit('SET_PROCESSING',false);\r\n                    let errMsg = error.message;\r\n                    if (errMsg === 'The email address is badly formatted.') {\r\n                        commit('SET_ERROR', 'Не верный формат email');\r\n                    }else commit('SET_ERROR',errMsg);\r\n            });\r\n        },\r\n        STATE_CHANGED({commit},payload){\r\n            if (payload){\r\n                commit('setUser', payload.uid);\r\n            }else {\r\n                commit('unsetUser');\r\n            }\r\n        },\r\n        LOGOUT(){\r\n            firebase.auth().signOut();\r\n        }\r\n    },\r\n    getters:{\r\n        getIsAuthed: (state) => state.user.isAuth,\r\n        getUserID: (state) => state.user.userId\r\n    }\r\n}\r\n"]}]}